<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:macro name="gobilda_robot" params="prefix">

    <!-- Robot Parameters -->
    <xacro:property name="PI" value="3.14159265"/>
    <xacro:property name="body_length" value="1.415"/>
    <xacro:property name="body_width" value="0.385"/>
    <xacro:property name="body_height" value="0.07"/>
    <xacro:property name="body_density" value="7850.0"/> <!-- Steel -->
    <xacro:property name="body_mass" value="${body_density * body_length * body_height * body_width}"/>
    <xacro:property name="body_inertia_x" value="${1.0/12.0 * body_mass * (body_height*body_height + body_width*body_width)}"/>
    <xacro:property name="body_inertia_y" value="${1.0/12.0 * body_mass * (body_length*body_length + body_height*body_height)}"/>
    <xacro:property name="body_inertia_z" value="${1.0/12.0 * body_mass * (body_length*body_length + body_width*body_width)}"/>

    <xacro:property name="wheel_radius" value="0.045"/>
    <xacro:property name="wheel_width" value="0.03"/>
    <xacro:property name="wheel_separation" value="${body_width + wheel_width}"/>
    <xacro:property name="wheel_offset_x" value="0.1"/>
    <xacro:property name="wheel_offset_y" value="0.09"/>
    <xacro:property name="wheel_density" value="900"/> <!-- Ruber -->
    <xacro:property name="wheel_mass" value="${wheel_density * PI * wheel_radius * wheel_radius * wheel_width}"/>
    <xacro:property name="wheel_inertia_x" value="${1.0/12.0 * wheel_mass * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}"/>
    <xacro:property name="wheel_inertia_y" value="${1.0/12.0 * wheel_mass * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}"/>
    <xacro:property name="wheel_inertia_z" value="${1.0/2.0 * wheel_mass * wheel_radius * wheel_radius}"/>

    <xacro:property name="lidar_offset_x" value="0.1"/>
    <xacro:property name="lidar_offset_y" value="0.0"/>
    <xacro:property name="lidar_offset_z" value="0.03"/>

    <!-- Control Parameters -->    
    <xacro:property name="max_linear_acceleration" value="10"/>

    <!-- Links -->

    <!-- Body Link -->
    <link name="base_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${body_length} ${body_width} ${body_height}"/>
            </geometry>
        </visual>
        
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${body_length} ${body_width} ${body_height}"/>
            </geometry>
        </collision>
        
        <inertial>
            <mass value="10"/>
            <inertia ixx="${body_inertia_x}" ixy="0.0" ixz="0.0" iyy="${body_inertia_y}" iyz="0" izz="${body_inertia_z}"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </inertial>
    </link>

    <!-- IMU Link -->
    <link name="imu_link">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.1"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.1"/>
            </geometry>
        </collision>
    </link>

    <!-- IMU Joint -->
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0.2 0.0 0.2" rpy="0 0 0"/>
  </joint>

  <!-- Gazebo IMU Plugin -->
  <gazebo>
    <sensor name="imu" type="imu">
      <update_rate>100.0</update_rate>
      <imu>
        <angular_velocity>
          <noise type="gaussian">
            <mean>0</mean>
            <stddev>0.02</stddev>
          </noise>
        </angular_velocity>
        <linear_acceleration>
          <noise type="gaussian">
            <mean>0</mean>
            <stddev>0.02</stddev>
          </noise>
        </linear_acceleration>
      </imu>
      <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
        <robotNamespace>/</robotNamespace>
        <frameName>imu_link</frameName>
        <rate>100.0</rate>
      </plugin>
    </sensor>
  </gazebo>

  <!-- OAK-D Pro Camera Link -->
  <link name="oakd_pro_camera_link">
    <visual>
      <geometry>
        <box size="0.15 0.05 0.05"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.15 0.05 0.05"/>
      </geometry>
    </collision>
  </link>

  <!-- OAK-D Pro Camera Joint -->
  <joint name="oakd_camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="oakd_pro_camera_link"/>
    <origin xyz="0.3 0.0 0.2" rpy="0 0 0"/>
  </joint>

  <!-- Gazebo Camera Plugin (RGB) -->
  <gazebo>
    <sensor name="oakd_rgb_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>1.39626</horizontal_fov>
        <image width="640" height="480"/>
        <clip near="0.1" far="100.0"/>
      </camera>
      <plugin name="gazebo_ros_camera" filename="libgazebo_ros_camera.so">
        <robotNamespace>/</robotNamespace>
        <cameraName>oakd_rgb_camera</cameraName>
        <frameName>oakd_pro_camera_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

    <!-- Left Wheel -->
    <link name="left_wheel_link">
        <visual>
            <origin xyz="-${wheel_offset_x} 0.27 -0.01" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </visual>
        
        <collision>
            <origin xyz="-${wheel_offset_x} 0.27 -0.01" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
        </collision>
       
        <inertial>
            <mass value="2"/>
            <inertia ixx="${wheel_inertia_x}" ixy="0.0" ixz="0.0" iyy="${wheel_inertia_y}" iyz="0" izz="${wheel_inertia_z}"/>
            <origin xyz="0.0 0.0 0.0" rpy="1.570795 0.0 0.0"/>
        </inertial>
    </link>

    <!-- Right Wheel -->
    <link name="right_wheel_link">
        <visual>
            <origin xyz="-${wheel_offset_x} -${wheel_offset_y} -0.01" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${wheel_radius}" />
            </geometry>
        </visual>
        
        <collision>
            <origin xyz="-${wheel_offset_x} -${wheel_offset_y} -0.01" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        
        <inertial>
            <mass value="2"/>
            <inertia ixx="${wheel_inertia_x}" ixy="0.0" ixz="0.0" iyy="${wheel_inertia_y}" iyz="0" izz="${wheel_inertia_z}"/>
            <origin xyz="0.0 0.0 0.0" rpy="1.570795 0.0 0.0"/>
        </inertial>
    </link>

    <!-- Laser -->
    <link name="laser">
        <visual>
            <origin xyz="${lidar_offset_x} ${lidar_offset_y} ${lidar_offset_z}" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </visual>
        
        <collision>
            <origin xyz="${lidar_offset_x} ${lidar_offset_y} ${lidar_offset_z}" rpy="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>
    </link>

    <!-- Joints -->

    <!-- Left Wheel Joint -->
    <joint name="left_wheel_joint" type="continuous">
        <origin xyz="-${wheel_offset_x} ${-wheel_offset_y} 0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="left_wheel_link"/>
        <axis xyz="0 1 0"/>
        <limit effort="100" velocity="10.0"/>
        <dynamics damping="0.1" friction="0.1"/>
    </joint>

    <!-- Right Wheel Joint -->
    <joint name="right_wheel_joint" type="continuous">
        <origin xyz="-${wheel_offset_x} ${-wheel_offset_y} 0" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="right_wheel_link"/>
        <axis xyz="0 1 0"/>
        <limit effort="100" velocity="10.0"/>
        <dynamics damping="0.1" friction="0.1"/>
    </joint>

    <!-- Lidar Joint (fixed) -->
    <joint name="lidar_joint" type="fixed">
        <origin xyz="${lidar_offset_x} ${lidar_offset_y} ${lidar_offset_z}" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="laser"/>
    </joint>

</xacro:macro>
</robot>
